"0","fsc_nw %>%"
"0","  group_by(date, activity_red) %>% "
"0","  summarise(beneficiaries = sum(beneficiaries)) %>% "
"0","  rbind(fsc_2021_nw %>%  "
"0","          # filter(unique_beneficiaries == ""Yes"") %>%"
"0","          group_by(date, activity_red) %>% "
"0","          summarise(beneficiaries = sum(beneficiaries))) %>% "
"0","  group_by(activity_red) %>% "
"0","  arrange(date) %>% "
"0","  mutate(cum_ben = cumsum(beneficiaries)) %>% "
"0","  arrange(activity_red) %>% "
"0","  mutate(activity_red = str_replace_all(activity_red, ""provision of "", """")) %>%"
"0","  ggplot(aes(x = date, y = cum_ben, fill = activity_red)) +"
"0","  geom_vline(colour = ""black"", lty = 2, xintercept = as.numeric(as.Date(""2022-01-01"")), alpha = 0.5) +"
"0","  geom_vline(colour = ""black"", lty = 2, xintercept = as.numeric(as.Date(""2021-06-01"")), alpha = 0.5) +"
"0","  # can't use the other format since some activities only occurred in one month and won't show up otherwise"
"0","  geom_col() + "
"0","  # geom_step(size = 0.6, aes(group = activity_red)) +"
"0","  scale_x_date(date_breaks = ""1 month"", date_labels = ""%b"") +"
"0","  scale_y_continuous(labels = comma) +"
"0","  facet_wrap(~ activity_red, scales = ""free_y"") +"
"0","  theme(legend.position = ""none"","
"0","        axis.text.x = element_text(size = 5, angle = 60), "
"0","        axis.text.y = element_text(size = 5)) + # see if this works when you knit, then do it for the other plots "
"0","  labs(x = ""Month"", "
"0","       y = ""Cumulative beneficiary frequencies"", "
"0","       title = ""Monthly progress by activity, 2021-2022(Q1)"","
"0","       subtitle = ""Figures are in cumulative beneficiary frequencies reached"") + "
"0","  theme(plot.title = element_text(size = 12)) "
"1","`summarise()` has grouped output by 'date'. You can override using the `.groups` argument.
"
"1","`summarise()` has grouped output by 'date'. You can override using the `.groups` argument.
"
